#Import the modules
from tkinter import *
import parser
from math import *

root = Tk()
root.title('Scientific Calculator')
root.geometry("720x360")

#It keeps the track of current position on the input text field
i = 0
# Takes the i/p values and display it on the input field
def get_variables(num):
    global i
    display.insert(i,num)
    i+=1
#calculate func checks the string that is to be calculated and displays it 
def calculate():
    entire_string = display.get()
    try:
        expression= parser.expr(entire_string).compile()
        result = eval(expression)
        clear_all()
        display.insert(0,result)
    except Exception:
        clear_all()
        display.insert(0,"Error")
 
# Takes the i/p operator and displays it on the input field
def get_operation(operator):
    global i
    length = len(operator)
    display.insert(i,operator)
    i+=length
 
#Maps the AC button, i.e to clear all
def clear_all():
    display.delete(0,END)#deletes from 0 to end 
 
#Undo function used to reverse steps
def undo():
    entire_string = display.get()
    if len(entire_string):
        new_string = entire_string[:-1]
        clear_all()
        display.insert(0,new_string)
    else:
        clear_all()
        display.insert(0,"Error")

#Factorial calculation
def fact():
    entire_string = display.get()
    try:
        result = factorial(int(entire_string))
        clear_all()
        display.insert(0,result)
    except Exception:
        clear_all()
        display.insert(0,"Error")

def sine():
    entire_string = display.get()
    try:
        result = sin(radians(float(entire_string)))
        clear_all()
        display.insert(0,result)
    except Exception:
        clear_all()
        display.insert(0,"Error")

def cosine():
    entire_string = display.get()
    try:
        result = cos(radians(float(entire_string)))
        clear_all()
        display.insert(0,result)
    except Exception:
        clear_all()
        display.insert(0,"Error")


def tangent():
    entire_string = display.get()
    try:
        result = tan(radians(float(entire_string)))
        clear_all()
        display.insert(0,result)
    except Exception:
        clear_all()
        display.insert(0,"Error")

def deg():
    entire_string = display.get()
    try:
        result = degrees(float(entire_string))
        clear_all()
        display.insert(0,result)
    except Exception:
        clear_all()
        display.insert(0,"Error")


def rad():
    entire_string = display.get()
    try:
        result = radians(float(entire_string))
        clear_all()
        display.insert(0,result)
    except Exception:
        clear_all()
        display.insert(0,"Error")


#--------------------------------------UI Design ---------------------------------------------

#adding the input field
display = Entry(root,font=('MS Sans Serif', 15, 'bold'),cursor='plus')
display.grid(rowspan=3,columnspan=8,sticky=N+E+W+S)
 
#Numbers in the calculator

Button(root,font=('MS Sans Serif', 15, 'bold'),cursor='plus',relief='raised',bg='azure',activebackground='cyan',text="1",height=2, width=10,command = lambda :get_variables(1)).grid(row=4,column=0)
Button(root,font=('MS Sans Serif', 15, 'bold'),cursor='plus',relief='raised',bg='azure',activebackground='cyan',text=" 2",height=2, width=10,command = lambda :get_variables(2)).grid(row=4,column=1 )
Button(root,font=('MS Sans Serif', 15, 'bold'),cursor='plus',relief='raised',bg='azure',activebackground='cyan',text=" 3",height=2, width=10,command = lambda :get_variables(3)).grid(row=4,column=2 )

Button(root,font=('MS Sans Serif', 15, 'bold'),cursor='plus',relief='raised',bg='azure',activebackground='cyan',text="4",height=2, width=10,command = lambda :get_variables(4)).grid(row=5,column=0 )
Button(root,font=('MS Sans Serif', 15, 'bold'),cursor='plus',relief='raised',bg='azure',activebackground='cyan',text=" 5",height=2, width=10,command = lambda :get_variables(5)).grid(row=5,column=1 )
Button(root,font=('MS Sans Serif', 15, 'bold'),cursor='plus',relief='raised',bg='azure',activebackground='cyan',text=" 6",height=2, width=10,command = lambda :get_variables(6)).grid(row=5,column=2 )

Button(root,font=('MS Sans Serif', 15, 'bold'),cursor='plus',relief='raised',bg='azure',activebackground='cyan',text="7",height=2, width=10,command = lambda :get_variables(7)).grid(row=6,column=0 )
Button(root,font=('MS Sans Serif', 15, 'bold'),cursor='plus',relief='raised',bg='azure',activebackground='cyan',text=" 8",height=2, width=10,command = lambda :get_variables(8)).grid(row=6,column=1 )
Button(root,font=('MS Sans Serif', 15, 'bold'),cursor='plus',relief='raised',bg='azure',activebackground='cyan',text=" 9",height=2, width=10,command = lambda :get_variables(9)).grid(row=6,column=2 )
 
#adding other buttons to the calculator
Button(root,font=('MS Sans Serif', 15, 'bold'),cursor='plus',relief='raised',bg='spring green',activebackground='forest green',text="AC",height=2, width=10,command=lambda :clear_all()).grid(row=7,column=0 )
Button(root,font=('MS Sans Serif', 15, 'bold'),cursor='plus',relief='raised',bg='azure',activebackground='cyan',text=" 0",height=2, width=10,command = lambda :get_variables(0)).grid(row=7,column=1 )
Button(root,font=('MS Sans Serif', 15, 'bold'),cursor='plus',relief='raised',bg='spring green',activebackground='forest green',text="<-",height=2, width=10,command= lambda :undo()).grid(row=7,column=2 )

Button(root,font=('MS Sans Serif', 15, 'bold'),cursor='plus',relief='raised',bg='firebrick1',activebackground='firebrick4',text="+",height=2, width=5,command= lambda :get_operation("+")).grid(row=4,column=3 )
Button(root,font=('MS Sans Serif', 15, 'bold'),cursor='plus',relief='raised',bg='firebrick1',activebackground='firebrick4',text="-",height=2, width=5,command= lambda :get_operation("-")).grid(row=5,column=3 )
Button(root,font=('MS Sans Serif', 15, 'bold'),cursor='plus',relief='raised',bg='firebrick1',activebackground='firebrick4',text="*",height=2, width=5,command= lambda :get_operation("*")).grid(row=6,column=3 )
Button(root,font=('MS Sans Serif', 15, 'bold'),cursor='plus',relief='raised',bg='firebrick1',activebackground='firebrick4',text="/",height=2, width=5,command= lambda :get_operation("/")).grid(row=7,column=3 )
 
# adding new operations
Button(root,font=('MS Sans Serif', 15, 'bold'),cursor='plus',relief='raised',bg='orange',activebackground='dark orange',text="PI",height=2, width=5,command= lambda :get_operation("*3.14")).grid(row=4,column=4 )
Button(root,font=('MS Sans Serif', 15, 'bold'),cursor='plus',relief='raised',bg='orange',activebackground='dark orange',text="%",height=2, width=5,command= lambda :get_operation("%")).grid(row=5,column=4 )
Button(root,font=('MS Sans Serif', 15, 'bold'),cursor='plus',relief='raised',bg='orange',activebackground='dark orange',text="(",height=2, width=5,command= lambda :get_operation("(")).grid(row=6,column=4 )
Button(root,font=('MS Sans Serif', 15, 'bold'),cursor='plus',relief='raised',bg='orange',activebackground='dark orange',text="exp",height=2, width=5,command= lambda :get_operation("**")).grid(row=7,column=4 )

Button(root,font=('MS Sans Serif', 15, 'bold'),cursor='plus',relief='raised',bg='yellow',activebackground='gold',text=" .",height=2, width=5,command=lambda :get_variables(".")).grid(row=4, column=5 )
Button(root,font=('MS Sans Serif', 15, 'bold'),cursor='plus',relief='raised',bg='yellow',activebackground='gold',text="x!",height=2, width=5,command= lambda: fact()).grid(row=5,column=5 )
Button(root,font=('MS Sans Serif', 15, 'bold'),cursor='plus',relief='raised',bg='yellow',activebackground='gold',text=")",height=2, width=5,command= lambda :get_operation(")")).grid(row=6,column=5 )
Button(root,font=('MS Sans Serif', 15, 'bold'),cursor='plus',relief='raised',bg='yellow',activebackground='gold',text="RAD\n->\nDEG",height=2, width=5,command= lambda :deg()).grid(row=7,column=5 )

Button(root,font=('MS Sans Serif', 15, 'bold'),cursor='plus',relief='raised',bg='dodger blue',activebackground='blue',text="SIN",height=2, width=5,command= lambda :sine()).grid(row=4,column=6)
Button(root,font=('MS Sans Serif', 15, 'bold'),cursor='plus',relief='raised',bg='dodger blue',activebackground='blue',text="COS",height=2, width=5,command= lambda :cosine()).grid(row=5,column=6)
Button(root,font=('MS Sans Serif', 15, 'bold'),cursor='plus',relief='raised',bg='dodger blue',activebackground='blue',text="TAN",height=2, width=5,command= lambda :tangent()).grid(row=6,column=6)
Button(root,font=('MS Sans Serif', 15, 'bold'),cursor='plus',relief='raised',bg='dodger blue',activebackground='blue',text="DEG\n->\nRAD",height=2, width=5,command= lambda :rad()).grid(row=7,column=6)
Button(root,font=('MS Sans Serif', 15, 'bold'),cursor='plus',relief='raised',bg='lemon chiffon',activebackground='light goldenrod',text="=",height=2, width=10,command= lambda :calculate()).grid(columnspan=8, sticky=N+S+E+W )

root.mainloop()
